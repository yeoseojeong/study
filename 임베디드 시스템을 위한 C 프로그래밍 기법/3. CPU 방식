1. 노이만형 CPU는 아래의 구조를 가지고 있음

	- 어드레스 버스: 디바이스에 액세스할 때 '번지' 를 지정하기 위해 사용
	- 데이터 버스: 어드레스 버스에 의해 지정된 번지의 디바이스와 CPU 사이에서 데이터의 입출력을 실시하기 위해 사용
	- 프로그램 카운터: 메모리 상에 있는 프로그램 중에 어느 번지의 명령을 현재 참조하고 있는지를 나타내는 레지스터. 어드레스 값 저장

	2. 메모리와 C 프로그램

2.1 메모리 맵


RTOS 
스타트업 루틴
사용자 프로그램
스택 영역
데이터 영역
힙 영역

I/O 영역
인터럽트 백터 테이블 영역


2.2 스택

푸시(Push): 스택에 데이터를 저장하는 조작
팝(Pop): 스택에서 데이터를 꺼내는 조작

FILO(First In  Last Out): 처음 들어간 것이 가장 나중에 나오는 것

	3. 인터럽트 설정

3.1 인터럽트란? 

말 그대로 처리 중간에 끼어드는 것
어떤 처리가 실행되고 있을 때 인터럽트 처리가 기동 되면 실행 중이던 처리를 중단하고 인터럽트 처리를 우선적으로 실행하며 처리가 완료되면 중단되었던 처리를 재개하는 방식

인터럽트를 발생시키는 디바이스에서 인터럽트의 원인이 되는 상태의 변화가 발생했을 때에 인터럽트 컨트롤러라고 불리는 회로에 신호가 입력

인터럽트 컨트롤러: 신호선별로 인터럽트 번호를 부여하고 있고 인터럽트가 발생하면 인터럽트가 발생했다는 것과 인터럽트 번호를 CPU에게 통지

	4. 스타트업 루틴

기동을 위한 프로그램
임베디드 제품의 전원 ON 인터럽트에 의해 기동 되고, main을 위해 여러가지 다양한 사전 처리를 하고 난 후에 c언어로 작성된 main을 호출

	5. 컴파일과 링크

5.1 컴파일러가 하는 일

C언어로 기술된 프로그램을 대상이 되는 컴퓨터가 직접 실행할 수 있는 기계어 프로그램으로 변환하는 소프트웨어

컴파일러의 실행환경과 다른 환경에서 실행되는 기계어의 프로그램이 생성된다는 것
프로그램을 생성하는 컴파일러를 '크로스 컴파일러'라고 함

5.2 링키지 에디터가 하는 일

기계어로 만들어진 프로그램에서 사용하고 있는 함수나 변수가 전부 같은 파일 내에 그 실체가 있는지 여부를 판정하여 파일 내에 있는 것에는 그것이 배치되어 있는 위치로의 참조 관계를 작성하고 파일 내에 없는 것은 다른 지정된 파일이나 라이브러리에 그것이 잇는지를 검색하여 최종적으로 필요한 함수나 변수를 전부 결합(링크)해서 실행가능한 프로그램을 작성하는 것


- 풀업과 풀다운
풀업: 스위치 ON: 0V / 스위치 OFF: 5V
풀다운: 스위치 ON: 5V / 스위치 OFF: 0V


	7. 리얼타임 운영체제

운영체제를 사용하는 장점(운영체제의 역할)

- 멀티태스킹(병행 처리)를 쉽게 실현할 수 있다.
- 멀티태스킹을 실현할 수 있다는 점에서 단순한 기능을 가진 태스크의 집합으로 구현할 수 있기때문에 재사용성의 향상이 기대된다.
- 운영체제는 하드웨어를 추상화 한다.


운영체제를 사용하는 단점

- 운영체제 때문에 CPU 오버헤드가 발생한다.
- 운영체제 때문에 메모리 풋프린터가 소비된다.
- 비용(구매비용, 런타임 라이선스 비용, 유지 보수비용 등)이 발생한다.
- 시스템에 블랙박스 부분이 생기게 된다.

